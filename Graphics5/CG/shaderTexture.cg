/**
 * This shader implements Texture mapping.
 */

struct VertexInput {
	float4 position : POSITION;
	float3 color	: COLOR;
	float2 texCoord	: TEXCOORD0;
};

struct VertexOutput {
	float4 position : POSITION;
	float3 color	: COLOR;
	float2 texCoord	: TEXCOORD0;
};

struct FragmentInput {
	float4 position : POSITION;
	float2 texCoord	: TEXCOORD0;
};

struct FragmentOutput {
	float4 color	: COLOR;
};


VertexOutput VertexMain(
				VertexInput vi,
				uniform float4x4 modelViewProj) {
	VertexOutput vo;

	vo.position = mul(modelViewProj, vi.position);
	vo.color = vi.color;
	vo.texCoord = vi.texCoord;

	return vo;
}

FragmentOutput FragmentMain(
				FragmentInput fi,
				uniform sampler2D tex : TEX0) {
	FragmentOutput fo;

	fo.color = tex2D(tex, fi.texCoord);

	return fo;
}

